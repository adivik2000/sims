


tempdist=Factory(:district,:abbrev=>'temp',:name=>'temp')
target=District.find_by_abbrev('abbrev')



Tier.record_timestamps = false
ProbeDefinition.record_timestamps = false
GoalDefinition.record_timestamps = false




target.students.find(:all,:joins=>:checklists, :conditions => 'checklists.id is not null')
target.students.find(:all,:joins=>:recommendations, :conditions => 'recommendations.id is not null')



target.tiers.update_all(:district_id => tempdist.id)
target.probe_definitions.update_all(:district_id => tempdist.id)
target.goal_definitions.update_all(:district_id => tempdist.id)
target.instance_variable_set('@intervention_clusters',nil)

CreateTrainingDistrict.generate_interventions(target, "public/system/district_demo_content/madison")






target.students.find(:first,:joins => :interventions, :conditions => 'interventions.id is not null').schools

#destroy
tempdist.probe_definitions.destroy_all
tempdist.goal_definitions.destroy_all
tempdist.tiers.destroy_all
tempdist.destroy





Tiers
   checklists assigned to that tier
   principal overrides assigned to that tier
   intervention definitions assigned to that tier
   recommendations assigned to that tier


   checklist definitions in use

   collect ids of things in use, save to a file

Moving content
Create temporary district
Turn off timestamps
Move Goal Definitions
Move Probe Definitions
Move Tiers

Generate content



Decide which tiers to keep
decide which probe definitions to keep
decide which intervention definitions to keep
Follow recommended monitors and intervention_probe_assignments

Intervention Definitions
intervention_cluster_ids =  tempdist.intervention_clusters.collect(&:id)
idids = []

idids << InterventionDefinition.find_all_by_intervention_cluster_id(intervention_cluster_ids,
    :joins => :interventions, :conditions => "interventions.id is not null").collect(&:id);nil
idids << InterventionDefinition.find_all_by_intervention_cluster_id_and_custom(intervention_cluster_ids,true).collect(&:id)
idids << InterventionDefinition.find_all_by_intervention_cluster_id(intervention_cluster_ids,:conditions => "updated_at > '2009-08-01'").collect(&:id)

idids=idids.flatten.uniq



change_ic = tempdist.intervention_clusters.find{|e| e.title == "Number Knowledge or Number Concept Strategies"}
InterventionCluster.find(change_ic.id).update_attribute(:title, "Number Development ") if change_ic

InterventionDefinition.find(idids).each do |int_def|

target_cluster = target.intervention_clusters.find{|e| e.title == int_def.intervention_cluster.title}
if target_cluster
int_def.tier = target.tiers.find_by_position(int_def.tier.position)

target_def = target_cluster.intervention_definitions.find_by_title(int_def.title)

if target_def
int_def.interventions.update_all("intervention_definition_id = #{target_def.id}")
int_def.recommended_monitors.update_all("intervention_definition_id = #{target_def.id}")
int_def.quicklist_items.update_all("intervention_definition_id = #{target_def.id}")
else
int_def.intervention_cluster_id = target_cluster.id
end
int_def.save!
else
puts 'different category'
end

end;nil


probe_definitions #record ids

pdids = []
  pdids << tempdist.probe_definitions.find_all_by_custom(true).collect(&:id)
  pdids <<  tempdist.probe_definitions.find(:all,:joins=>:intervention_probe_assignments, :conditions => "intervention_probe_assignments.id is not null").collect(&:id)
  pdids <<  tempdist.probe_definitions.find(:all, :conditions => "updated_at > '2009-08-01 00:00:00'").collect(&:id)

  pdids= pdids.flatten.uniq



ProbeDefinition.find(pdids).each do |probe_definition|
target_pd = target.probe_definitions.find_by_title(probe_definition.title)
if target_pd
probe_definition.recommended_monitors.update_all("probe_definition_id = #{target_pd.id}")
probe_definition.intervention_probe_assignments.update_all("probe_definition_id = #{target_pd.id}")
else
probe_definition.update_attribute(:district_id, target.id)
end
end;nil



----
make sure timestamps are off
1. update tiers on intervention definitions
2. review progress monitors and interventions
if duplicate  (same title??)
  move assigned content over to corresponding in target district  (note target id for later verification of recommended monitors)

if distinct
  change to appropriate intervention cluster (for intervention definition) or district (for probe definition)



